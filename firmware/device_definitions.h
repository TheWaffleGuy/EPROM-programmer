#define VOLT(a,b) ( a * 8 + (b * 8) / 1000 ) //In 0.125 steps
#define OVERPROGRAM_PW(a,b) ( a * 2 + b / 5) //In 0.5 steps

#define PGM_VARIANT_VPP_PULSED_POSITIVE            0
#define PGM_VARIANT_P18_PULSED_NEGATIVE            1
#define PGM_VARIANT_P20_PULSED_NEGATIVE            2
#define PGM_VARIANT_P18_PULSED_NEGATIVE_P19_VERIFY 3
#define PGM_VARIANT_P18_PULSED_POSITIVE            4
#define PGM_VARIANT_CYPRESS                        5

#define PGM_VPP_PIN_P19 0
#define PGM_VPP_PIN_P20 1
#define PGM_VPP_PIN_P21 2

typedef struct IC {
  char manufacturer[10];
  char name[11];
  uint8_t adr_pins[13];
  uint8_t ctrl_pins_read_h[2];

  uint8_t vpp;
  uint16_t pgm_pw_us;

  uint8_t pgm_vcc_extra : 4;
  uint8_t pgm_intial_single_pass : 1;
  uint8_t pgm_overprogram_5v_vcc : 1;
  uint8_t pgm_overprogram_ignore_verify : 1;
  uint8_t pgm_overprogram_multiply_n : 1;

  uint8_t pgm_overprogram_after : 1;
  uint8_t pgm_overprogram_pw : 6;
  uint8_t : 0;

  uint8_t pgm_vpp_pin : 2;
  uint8_t pgm_pulses : 6;

  uint8_t pgm_vpp_always_on: 1;
  uint8_t f_can_blank_check : 1;
  uint8_t f_blank_check_value : 1;
  uint8_t f_2364_compat_pinout : 1;
  uint8_t pgm_variant: 3;
} IC;

#if __GNUC__ > 11
#define MANUFACTURER(n) .manufacturer = n
#define NAME(n) .name = n
#else
#define NAME(n) { .name = n }
#define MANUFACTURER(n) { .manufacturer = n }
#endif

const IC ics[] PROGMEM = {
  {
    MANUFACTURER("CYPRESS"),
    NAME("CY7C264"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19, 18 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(12, 500),
    .pgm_pw_us = 200,
    .pgm_vcc_extra = 0,
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 1,
    .pgm_overprogram_multiply_n = 1,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(4, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P19,
    .pgm_pulses = 10,
    .pgm_vpp_always_on = 1,
    .f_can_blank_check = 1,
    .f_blank_check_value = 0,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_CYPRESS
  },
  {
    MANUFACTURER("AMD"),
    NAME("AM27C49"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19, 18 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(13, 500),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(1, 0),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 1,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 1,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(2, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 25,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  { //Assumed to be same algorithm as 27CX321
    MANUFACTURER("ICT"),
    NAME("27CX641"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19, 18 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(12, 500),
    .pgm_pw_us = 100,
    .pgm_vcc_extra = VOLT(1, 0),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 1,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(5, 5),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 30,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 0,
    .f_blank_check_value = 0,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  { //Express algorithm
    MANUFACTURER("MICROCHIP"),
    NAME("27HC641"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19, 18 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(13, 0),
    .pgm_pw_us = 100,
    .pgm_vcc_extra = VOLT(1, 500),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 10,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  { //Algorithm observed on oscilloscope on ALL-03 programmer
    MANUFACTURER("SIGNETICS"),
    NAME("27HC641"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19, 18 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(12, 500),
    .pgm_pw_us = 2250,
    .pgm_vcc_extra = 0, //???
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 20,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 0,
    .f_blank_check_value = 0,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("ATMEL"),
    NAME("AT27HC641"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19, 18 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(12, 500),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(1, 0),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 1,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(3, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 25,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("ATMEL"),
    NAME("AT27HC641R"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19, 18 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(13, 0),
    .pgm_pw_us = 100,
    .pgm_vcc_extra = VOLT(1, 0),
    .pgm_intial_single_pass = 1,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 10,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("SHARP"),
    NAME("LH5749"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19, 18 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(13, 0),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(1, 0),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 1,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(3, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 25,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("WSI"),
    NAME("WS57C49"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19, 18 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(13, 500),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(0, 500),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(1, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 5,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("WSI"),
    NAME("WS57C49B"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19, 18 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(13, 500),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(0, 500),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(1, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 5,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("WSI"),
    NAME("WS57C49C"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19, 18 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(12, 750),
    .pgm_pw_us = 100,
    .pgm_vcc_extra = VOLT(1, 250),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(10, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 25,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("MOTOROLA"),
    NAME("MCM68764"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19, 18, 21 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(25, 0),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(1, 0),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 20, //No max-value specified in datasheet
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("MOTOROLA"),
    NAME("MCM68766"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19, 18, 21 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(25, 0),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(1, 0),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 20, //No max-value specified in datasheet
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 1,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("TI"),
    NAME("TMS2532A"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19, 18 },
    .ctrl_pins_read_h = { 21 },
    .vpp = VOLT(21, 0),
    .pgm_pw_us = 50000,
    .pgm_vcc_extra = 0,
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P21,
    .pgm_pulses = 1,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P20_PULSED_NEGATIVE
  },
  {
    MANUFACTURER("TI"),
    NAME("TMS2532"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19, 18 },
    .ctrl_pins_read_h = { 21 },
    .vpp = VOLT(25, 0),
    .pgm_pw_us = 50000,
    .pgm_vcc_extra = 0,
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P21,
    .pgm_pulses = 1,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P20_PULSED_NEGATIVE
  },
  {
    MANUFACTURER("HITACHI"),
    NAME("HN462532"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19, 18 },
    .ctrl_pins_read_h = { 21 },
    .vpp = VOLT(25, 0),
    .pgm_pw_us = 50000,
    .pgm_vcc_extra = 0,
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P21,
    .pgm_pulses = 1,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P20_PULSED_NEGATIVE
  },
  {
    MANUFACTURER("MOTOROLA"),
    NAME("MCM2532"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19, 18 },
    .ctrl_pins_read_h = { 21 },
    .vpp = VOLT(25, 0),
    .pgm_pw_us = 50000,
    .pgm_vcc_extra = 0,
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P21,
    .pgm_pulses = 1,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P20_PULSED_NEGATIVE
  },
  {
    MANUFACTURER("ST"),
    NAME("M2532"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19, 18 },
    .ctrl_pins_read_h = { 21 },
    .vpp = VOLT(25, 0),
    .pgm_pw_us = 50000,
    .pgm_vcc_extra = 0,
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P21,
    .pgm_pulses = 1,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P20_PULSED_NEGATIVE
  },
  {
    MANUFACTURER("WSI"),
    NAME("WS57C43"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19 },
    .ctrl_pins_read_h = { 18 },
    .vpp = VOLT(13, 500),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(0, 500),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(1, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 5,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("WSI"),
    NAME("WS57C43B"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19 },
    .ctrl_pins_read_h = { 18 },
    .vpp = VOLT(13, 500),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(0, 500),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(1, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 5,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("WSI"),
    NAME("WS57C43C"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19 },
    .ctrl_pins_read_h = { 18 },
    .vpp = VOLT(12, 750),
    .pgm_pw_us = 100,
    .pgm_vcc_extra = VOLT(1, 250),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(10, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 5,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  { //Algorithm observed on oscilloscope on ALL-03 programmer
    MANUFACTURER("ICT"),
    NAME("27CX321"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19 },
    .ctrl_pins_read_h = { 18 },
    .vpp = VOLT(12, 500),
    .pgm_pw_us = 100,
    .pgm_vcc_extra = VOLT(1, 0),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 1,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(5, 5),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 30,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 0,
    .f_blank_check_value = 0,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  { //Assumed to be same algorithm as CY7C264
    MANUFACTURER("CYPRESS"),
    NAME("CY7C244"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 19 },
    .ctrl_pins_read_h = { 18 },
    .vpp = VOLT(12, 500),
    .pgm_pw_us = 200,
    .pgm_vcc_extra = 0, //???
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 1,
    .pgm_overprogram_multiply_n = 1,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(4, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P19,
    .pgm_pulses = 10,
    .pgm_vpp_always_on = 1,
    .f_can_blank_check = 1,
    .f_blank_check_value = 0,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_CYPRESS
  },
  {
    MANUFACTURER("NATIONAL"),
    NAME("NMC27C32B"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19, 21 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(12, 750),
    .pgm_pw_us = 100,
    .pgm_vcc_extra = VOLT(1, 250),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 25,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P18_PULSED_NEGATIVE
  },
  {
    MANUFACTURER("AMD"),
    NAME("AM2732B"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19, 21 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(12, 500),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(1, 0),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 1,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 1,
    .pgm_overprogram_pw = OVERPROGRAM_PW(2, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 15,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P18_PULSED_NEGATIVE
  },
  {
    MANUFACTURER("GENERIC"),
    NAME("2732"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19, 21 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(25, 0),
    .pgm_pw_us = 50000,
    .pgm_vcc_extra = 0,
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 1,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P18_PULSED_NEGATIVE
  },
  {
    MANUFACTURER("GENERIC"),
    NAME("2732A"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19, 21 },
    .ctrl_pins_read_h = {},
    .vpp = VOLT(21, 0),
    .pgm_pw_us = 50000,
    .pgm_vcc_extra = 0,
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 1,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P18_PULSED_NEGATIVE
  },
  {
    MANUFACTURER("NATIONAL"),
    NAME("NMC27C16B"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19 },
    .ctrl_pins_read_h = { 21 },
    .vpp = VOLT(12, 750),
    .pgm_pw_us = 100,
    .pgm_vcc_extra = VOLT(1, 250),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P21,
    .pgm_pulses = 25,
    .pgm_vpp_always_on = 1,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P18_PULSED_POSITIVE
  },
  {
    MANUFACTURER("AMD"),
    NAME("AM2716B"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19 },
    .ctrl_pins_read_h = { 21 },
    .vpp = VOLT(12, 500),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(1, 0),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 1,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 1,
    .pgm_overprogram_pw = OVERPROGRAM_PW(2, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P21,
    .pgm_pulses = 15,
    .pgm_vpp_always_on = 1,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P18_PULSED_POSITIVE
  },
  {
    MANUFACTURER("GENERIC"),
    NAME("2716"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 19 },
    .ctrl_pins_read_h = { 21 },
    .vpp = VOLT(25, 0),
    .pgm_pw_us = 50000,
    .pgm_vcc_extra = 0,
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = 0,
    .pgm_vpp_pin = PGM_VPP_PIN_P21,
    .pgm_pulses = 1,
    .pgm_vpp_always_on = 1,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P18_PULSED_POSITIVE
  },
  {
    MANUFACTURER("WSI"),
    NAME("WS57C191"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21 },
    .ctrl_pins_read_h = { 19, 18 },
    .vpp = VOLT(13, 500),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(0, 500),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(1, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 5,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("WSI"),
    NAME("WS57C191B"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21 },
    .ctrl_pins_read_h = { 19, 18 },
    .vpp = VOLT(13, 500),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(0, 500),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(1, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 5,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("WSI"),
    NAME("WS57C191C"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21 },
    .ctrl_pins_read_h = { 19, 18 },
    .vpp = VOLT(12, 750),
    .pgm_pw_us = 100,
    .pgm_vcc_extra = VOLT(1, 250),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 0,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(10, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 25,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  },
  {
    MANUFACTURER("TI"),
    NAME("TMS27C292"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21 },
    .ctrl_pins_read_h = { 19, 18 },
    .vpp = VOLT(13, 500),
    .pgm_pw_us = 100,
    .pgm_vcc_extra = 0,
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 0,
    .pgm_overprogram_ignore_verify = 1,
    .pgm_overprogram_multiply_n = 1,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(24, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 4,
    .pgm_vpp_always_on = 1,
    .f_can_blank_check = 0, //Can be blank-checked but requires special handling
    .f_blank_check_value = 0,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_P18_PULSED_NEGATIVE_P19_VERIFY
  },
  {
    MANUFACTURER("AMD"),
    NAME("AM27C191"),
    .adr_pins = { 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21 },
    .ctrl_pins_read_h = { 19, 18 },
    .vpp = VOLT(13, 500),
    .pgm_pw_us = 1000,
    .pgm_vcc_extra = VOLT(1, 0),
    .pgm_intial_single_pass = 0,
    .pgm_overprogram_5v_vcc = 1,
    .pgm_overprogram_ignore_verify = 0,
    .pgm_overprogram_multiply_n = 1,
    .pgm_overprogram_after = 0,
    .pgm_overprogram_pw = OVERPROGRAM_PW(2, 0),
    .pgm_vpp_pin = PGM_VPP_PIN_P20,
    .pgm_pulses = 25,
    .pgm_vpp_always_on = 0,
    .f_can_blank_check = 1,
    .f_blank_check_value = 1,
    .f_2364_compat_pinout = 0,
    .pgm_variant = PGM_VARIANT_VPP_PULSED_POSITIVE
  }
};

uint8_t num_ics = sizeof(ics) / sizeof(ics[0]);